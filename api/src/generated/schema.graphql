### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AggregateCompany {
  count: Int!
}

type AggregateJobApplication {
  count: Int!
}

type AggregateResume {
  count: Int!
}

enum ApplicationStatus {
  APPLIED
  DECIDED
  INTERESTED
  INTERVIEWING
  OFFER
}

type AwsFileData {
  Bucket: String!
  cloudfrontUrl: String!
  createdAt: DateTime!
  ETag: String!
  fileName: String!
  id: ID!
  Key: String!
  Location: String!
  s3Url: String!
  VersionId: String!
}

enum AwsFileDataOrderByInput {
  Bucket_ASC
  Bucket_DESC
  cloudfrontUrl_ASC
  cloudfrontUrl_DESC
  createdAt_ASC
  createdAt_DESC
  ETag_ASC
  ETag_DESC
  fileName_ASC
  fileName_DESC
  id_ASC
  id_DESC
  Key_ASC
  Key_DESC
  Location_ASC
  Location_DESC
  s3Url_ASC
  s3Url_DESC
  updatedAt_ASC
  updatedAt_DESC
  VersionId_ASC
  VersionId_DESC
}

input AwsFileDataWhereInput {
  AND: [AwsFileDataWhereInput!]
  Bucket: String
  Bucket_contains: String
  Bucket_ends_with: String
  Bucket_gt: String
  Bucket_gte: String
  Bucket_in: [String!]
  Bucket_lt: String
  Bucket_lte: String
  Bucket_not: String
  Bucket_not_contains: String
  Bucket_not_ends_with: String
  Bucket_not_in: [String!]
  Bucket_not_starts_with: String
  Bucket_starts_with: String
  cloudfrontUrl: String
  cloudfrontUrl_contains: String
  cloudfrontUrl_ends_with: String
  cloudfrontUrl_gt: String
  cloudfrontUrl_gte: String
  cloudfrontUrl_in: [String!]
  cloudfrontUrl_lt: String
  cloudfrontUrl_lte: String
  cloudfrontUrl_not: String
  cloudfrontUrl_not_contains: String
  cloudfrontUrl_not_ends_with: String
  cloudfrontUrl_not_in: [String!]
  cloudfrontUrl_not_starts_with: String
  cloudfrontUrl_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  ETag: String
  ETag_contains: String
  ETag_ends_with: String
  ETag_gt: String
  ETag_gte: String
  ETag_in: [String!]
  ETag_lt: String
  ETag_lte: String
  ETag_not: String
  ETag_not_contains: String
  ETag_not_ends_with: String
  ETag_not_in: [String!]
  ETag_not_starts_with: String
  ETag_starts_with: String
  fileName: String
  fileName_contains: String
  fileName_ends_with: String
  fileName_gt: String
  fileName_gte: String
  fileName_in: [String!]
  fileName_lt: String
  fileName_lte: String
  fileName_not: String
  fileName_not_contains: String
  fileName_not_ends_with: String
  fileName_not_in: [String!]
  fileName_not_starts_with: String
  fileName_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  Key: String
  Key_contains: String
  Key_ends_with: String
  Key_gt: String
  Key_gte: String
  Key_in: [String!]
  Key_lt: String
  Key_lte: String
  Key_not: String
  Key_not_contains: String
  Key_not_ends_with: String
  Key_not_in: [String!]
  Key_not_starts_with: String
  Key_starts_with: String
  Location: String
  Location_contains: String
  Location_ends_with: String
  Location_gt: String
  Location_gte: String
  Location_in: [String!]
  Location_lt: String
  Location_lte: String
  Location_not: String
  Location_not_contains: String
  Location_not_ends_with: String
  Location_not_in: [String!]
  Location_not_starts_with: String
  Location_starts_with: String
  NOT: [AwsFileDataWhereInput!]
  OR: [AwsFileDataWhereInput!]
  s3Url: String
  s3Url_contains: String
  s3Url_ends_with: String
  s3Url_gt: String
  s3Url_gte: String
  s3Url_in: [String!]
  s3Url_lt: String
  s3Url_lte: String
  s3Url_not: String
  s3Url_not_contains: String
  s3Url_not_ends_with: String
  s3Url_not_in: [String!]
  s3Url_not_starts_with: String
  s3Url_starts_with: String
  VersionId: String
  VersionId_contains: String
  VersionId_ends_with: String
  VersionId_gt: String
  VersionId_gte: String
  VersionId_in: [String!]
  VersionId_lt: String
  VersionId_lte: String
  VersionId_not: String
  VersionId_not_contains: String
  VersionId_not_ends_with: String
  VersionId_not_in: [String!]
  VersionId_not_starts_with: String
  VersionId_starts_with: String
}

type BatchPayload {
  count: Long!
}

enum BillingFrequency {
  MONTHLY
  YEARLY
}

type BillingInfo {
  billingFrequency: BillingFrequency
  card: Card
  endOfBillingPeriod: Int
  id: ID!
  isPremiumActive: Boolean!
  startOfBillingPeriod: Int
  stripeCustomerId: String
  stripeSubscriptionId: String
  user: User!
  willCancelAtEndOfPeriod: Boolean!
}

input BillingInfoWhereInput {
  AND: [BillingInfoWhereInput!]
  billingFrequency: BillingFrequency
  billingFrequency_in: [BillingFrequency!]
  billingFrequency_not: BillingFrequency
  billingFrequency_not_in: [BillingFrequency!]
  card: CardWhereInput
  endOfBillingPeriod: Int
  endOfBillingPeriod_gt: Int
  endOfBillingPeriod_gte: Int
  endOfBillingPeriod_in: [Int!]
  endOfBillingPeriod_lt: Int
  endOfBillingPeriod_lte: Int
  endOfBillingPeriod_not: Int
  endOfBillingPeriod_not_in: [Int!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  isPremiumActive: Boolean
  isPremiumActive_not: Boolean
  NOT: [BillingInfoWhereInput!]
  OR: [BillingInfoWhereInput!]
  startOfBillingPeriod: Int
  startOfBillingPeriod_gt: Int
  startOfBillingPeriod_gte: Int
  startOfBillingPeriod_in: [Int!]
  startOfBillingPeriod_lt: Int
  startOfBillingPeriod_lte: Int
  startOfBillingPeriod_not: Int
  startOfBillingPeriod_not_in: [Int!]
  stripeCustomerId: String
  stripeCustomerId_contains: String
  stripeCustomerId_ends_with: String
  stripeCustomerId_gt: String
  stripeCustomerId_gte: String
  stripeCustomerId_in: [String!]
  stripeCustomerId_lt: String
  stripeCustomerId_lte: String
  stripeCustomerId_not: String
  stripeCustomerId_not_contains: String
  stripeCustomerId_not_ends_with: String
  stripeCustomerId_not_in: [String!]
  stripeCustomerId_not_starts_with: String
  stripeCustomerId_starts_with: String
  stripeSubscriptionId: String
  stripeSubscriptionId_contains: String
  stripeSubscriptionId_ends_with: String
  stripeSubscriptionId_gt: String
  stripeSubscriptionId_gte: String
  stripeSubscriptionId_in: [String!]
  stripeSubscriptionId_lt: String
  stripeSubscriptionId_lte: String
  stripeSubscriptionId_not: String
  stripeSubscriptionId_not_contains: String
  stripeSubscriptionId_not_ends_with: String
  stripeSubscriptionId_not_in: [String!]
  stripeSubscriptionId_not_starts_with: String
  stripeSubscriptionId_starts_with: String
  user: UserWhereInput
  willCancelAtEndOfPeriod: Boolean
  willCancelAtEndOfPeriod_not: Boolean
}

type Card {
  billingInfo: BillingInfo!
  brand: String!
  expMonth: Int!
  expYear: Int!
  id: ID!
  last4Digits: String!
  stripePaymentMethodId: String!
}

input CardUpdateWithoutBillingInfoDataInput {
  brand: String
  expMonth: Int
  expYear: Int
  last4Digits: String
  stripePaymentMethodId: String
}

input CardWhereInput {
  AND: [CardWhereInput!]
  billingInfo: BillingInfoWhereInput
  brand: String
  brand_contains: String
  brand_ends_with: String
  brand_gt: String
  brand_gte: String
  brand_in: [String!]
  brand_lt: String
  brand_lte: String
  brand_not: String
  brand_not_contains: String
  brand_not_ends_with: String
  brand_not_in: [String!]
  brand_not_starts_with: String
  brand_starts_with: String
  expMonth: Int
  expMonth_gt: Int
  expMonth_gte: Int
  expMonth_in: [Int!]
  expMonth_lt: Int
  expMonth_lte: Int
  expMonth_not: Int
  expMonth_not_in: [Int!]
  expYear: Int
  expYear_gt: Int
  expYear_gte: Int
  expYear_in: [Int!]
  expYear_lt: Int
  expYear_lte: Int
  expYear_not: Int
  expYear_not_in: [Int!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  last4Digits: String
  last4Digits_contains: String
  last4Digits_ends_with: String
  last4Digits_gt: String
  last4Digits_gte: String
  last4Digits_in: [String!]
  last4Digits_lt: String
  last4Digits_lte: String
  last4Digits_not: String
  last4Digits_not_contains: String
  last4Digits_not_ends_with: String
  last4Digits_not_in: [String!]
  last4Digits_not_starts_with: String
  last4Digits_starts_with: String
  NOT: [CardWhereInput!]
  OR: [CardWhereInput!]
  stripePaymentMethodId: String
  stripePaymentMethodId_contains: String
  stripePaymentMethodId_ends_with: String
  stripePaymentMethodId_gt: String
  stripePaymentMethodId_gte: String
  stripePaymentMethodId_in: [String!]
  stripePaymentMethodId_lt: String
  stripePaymentMethodId_lte: String
  stripePaymentMethodId_not: String
  stripePaymentMethodId_not_contains: String
  stripePaymentMethodId_not_ends_with: String
  stripePaymentMethodId_not_in: [String!]
  stripePaymentMethodId_not_starts_with: String
  stripePaymentMethodId_starts_with: String
}

type Company {
  contacts(after: String, before: String, first: Int, last: Int, orderBy: CompanyContactOrderByInput, skip: Int, where: CompanyContactWhereInput): [CompanyContact!]
  createdAt: DateTime!
  id: ID!
  image: AwsFileData
  jobApplications(after: String, before: String, first: Int, last: Int, orderBy: JobApplicationOrderByInput, skip: Int, where: JobApplicationWhereInput): [JobApplication!]
  jobApplicationsCount: Int!
  name: String!
  notes: String
  rating: Int
  updatedAt: DateTime!
  user: User!
  website: String
}

type CompanyConnection {
  aggregate: AggregateCompany!
  edges: [CompanyEdge!]!
  pageInfo: PageInfo!
}

type CompanyContact {
  company: Company!
  email: String
  id: ID!
  name: String!
  notes: String
  order: Int!
  phone: String
  position: String
}

input CompanyContactCreateWithoutCompanyInput {
  email: String
  id: ID
  name: String!
  notes: String
  order: Int!
  phone: String
  position: String
}

enum CompanyContactOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  notes_ASC
  notes_DESC
  order_ASC
  order_DESC
  phone_ASC
  phone_DESC
  position_ASC
  position_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CompanyContactWhereInput {
  AND: [CompanyContactWhereInput!]
  company: CompanyWhereInput
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [CompanyContactWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [CompanyContactWhereInput!]
  order: Int
  order_gt: Int
  order_gte: Int
  order_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_not: Int
  order_not_in: [Int!]
  phone: String
  phone_contains: String
  phone_ends_with: String
  phone_gt: String
  phone_gte: String
  phone_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_not: String
  phone_not_contains: String
  phone_not_ends_with: String
  phone_not_in: [String!]
  phone_not_starts_with: String
  phone_starts_with: String
  position: String
  position_contains: String
  position_ends_with: String
  position_gt: String
  position_gte: String
  position_in: [String!]
  position_lt: String
  position_lte: String
  position_not: String
  position_not_contains: String
  position_not_ends_with: String
  position_not_in: [String!]
  position_not_starts_with: String
  position_starts_with: String
}

type CompanyEdge {
  cursor: String!
  node: Company!
}

enum CompanyOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  jobApplicationsCount_ASC
  jobApplicationsCount_DESC
  name_ASC
  name_DESC
  notes_ASC
  notes_DESC
  rating_ASC
  rating_DESC
  updatedAt_ASC
  updatedAt_DESC
  website_ASC
  website_DESC
}

input CompanyWhereInput {
  AND: [CompanyWhereInput!]
  contacts_every: CompanyContactWhereInput
  contacts_none: CompanyContactWhereInput
  contacts_some: CompanyContactWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  image: AwsFileDataWhereInput
  jobApplications_every: JobApplicationWhereInput
  jobApplications_none: JobApplicationWhereInput
  jobApplications_some: JobApplicationWhereInput
  jobApplicationsCount: Int
  jobApplicationsCount_gt: Int
  jobApplicationsCount_gte: Int
  jobApplicationsCount_in: [Int!]
  jobApplicationsCount_lt: Int
  jobApplicationsCount_lte: Int
  jobApplicationsCount_not: Int
  jobApplicationsCount_not_in: [Int!]
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [CompanyWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [CompanyWhereInput!]
  rating: Int
  rating_gt: Int
  rating_gte: Int
  rating_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_not: Int
  rating_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
  website: String
  website_contains: String
  website_ends_with: String
  website_gt: String
  website_gte: String
  website_in: [String!]
  website_lt: String
  website_lte: String
  website_not: String
  website_not_contains: String
  website_not_ends_with: String
  website_not_in: [String!]
  website_not_starts_with: String
  website_starts_with: String
}

input CompanyWhereUniqueInput {
  id: ID
}

scalar DateTime

type GoogleMapsLocation {
  googlePlacesId: String!
  id: ID!
  name: String!
}

input GoogleMapsLocationCreateInput {
  googlePlacesId: String!
  id: ID
  name: String!
}

input GoogleMapsLocationWhereInput {
  AND: [GoogleMapsLocationWhereInput!]
  googlePlacesId: String
  googlePlacesId_contains: String
  googlePlacesId_ends_with: String
  googlePlacesId_gt: String
  googlePlacesId_gte: String
  googlePlacesId_in: [String!]
  googlePlacesId_lt: String
  googlePlacesId_lte: String
  googlePlacesId_not: String
  googlePlacesId_not_contains: String
  googlePlacesId_not_ends_with: String
  googlePlacesId_not_in: [String!]
  googlePlacesId_not_starts_with: String
  googlePlacesId_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [GoogleMapsLocationWhereInput!]
  OR: [GoogleMapsLocationWhereInput!]
}

type JobApplication {
  applicationStatus: ApplicationStatus!
  company: Company!
  companyName: String!
  contacts(after: String, before: String, first: Int, last: Int, orderBy: JobApplicationContactOrderByInput, skip: Int, where: JobApplicationContactWhereInput): [JobApplicationContact!]
  coverLetterFile: AwsFileData
  createdAt: DateTime!
  dateApplied: DateTime
  dateDecided: DateTime
  dateInterviewing: [DateTime!]!
  dateOffered: DateTime
  id: ID!
  isApplicationActive: Boolean!
  isRemote: Boolean!
  jobDecision: JobDecision
  jobListingLink: String
  jobListingNotes: String
  location: GoogleMapsLocation
  locationName: String
  notes: String
  position: String!
  rating: Int
  resume: JobApplicationResume
  updatedAt: DateTime!
  user: User!
}

type JobApplicationConnection {
  aggregate: AggregateJobApplication!
  edges: [JobApplicationEdge!]!
  pageInfo: PageInfo!
}

type JobApplicationContact {
  email: String
  id: ID!
  jobApplication: JobApplication!
  name: String!
  notes: String
  order: Int!
  phone: String
  position: String
}

input JobApplicationContactCreateWithoutJobApplicationInput {
  email: String
  id: ID
  name: String!
  notes: String
  order: Int!
  phone: String
  position: String
}

enum JobApplicationContactOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  notes_ASC
  notes_DESC
  order_ASC
  order_DESC
  phone_ASC
  phone_DESC
  position_ASC
  position_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input JobApplicationContactWhereInput {
  AND: [JobApplicationContactWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  jobApplication: JobApplicationWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [JobApplicationContactWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [JobApplicationContactWhereInput!]
  order: Int
  order_gt: Int
  order_gte: Int
  order_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_not: Int
  order_not_in: [Int!]
  phone: String
  phone_contains: String
  phone_ends_with: String
  phone_gt: String
  phone_gte: String
  phone_in: [String!]
  phone_lt: String
  phone_lte: String
  phone_not: String
  phone_not_contains: String
  phone_not_ends_with: String
  phone_not_in: [String!]
  phone_not_starts_with: String
  phone_starts_with: String
  position: String
  position_contains: String
  position_ends_with: String
  position_gt: String
  position_gte: String
  position_in: [String!]
  position_lt: String
  position_lte: String
  position_not: String
  position_not_contains: String
  position_not_ends_with: String
  position_not_in: [String!]
  position_not_starts_with: String
  position_starts_with: String
}

type JobApplicationEdge {
  cursor: String!
  node: JobApplication!
}

enum JobApplicationOrderByInput {
  applicationStatus_ASC
  applicationStatus_DESC
  companyName_ASC
  companyName_DESC
  createdAt_ASC
  createdAt_DESC
  dateApplied_ASC
  dateApplied_DESC
  dateDecided_ASC
  dateDecided_DESC
  dateOffered_ASC
  dateOffered_DESC
  id_ASC
  id_DESC
  isApplicationActive_ASC
  isApplicationActive_DESC
  isRemote_ASC
  isRemote_DESC
  jobDecision_ASC
  jobDecision_DESC
  jobListingLink_ASC
  jobListingLink_DESC
  jobListingNotes_ASC
  jobListingNotes_DESC
  locationName_ASC
  locationName_DESC
  notes_ASC
  notes_DESC
  position_ASC
  position_DESC
  rating_ASC
  rating_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type JobApplicationResume {
  id: ID!
  resume: Resume
  selectedVersionId: String!
}

input JobApplicationResumeWhereInput {
  AND: [JobApplicationResumeWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [JobApplicationResumeWhereInput!]
  OR: [JobApplicationResumeWhereInput!]
  resume: ResumeWhereInput
  selectedVersionId: String
  selectedVersionId_contains: String
  selectedVersionId_ends_with: String
  selectedVersionId_gt: String
  selectedVersionId_gte: String
  selectedVersionId_in: [String!]
  selectedVersionId_lt: String
  selectedVersionId_lte: String
  selectedVersionId_not: String
  selectedVersionId_not_contains: String
  selectedVersionId_not_ends_with: String
  selectedVersionId_not_in: [String!]
  selectedVersionId_not_starts_with: String
  selectedVersionId_starts_with: String
}

input JobApplicationWhereInput {
  AND: [JobApplicationWhereInput!]
  applicationStatus: ApplicationStatus
  applicationStatus_in: [ApplicationStatus!]
  applicationStatus_not: ApplicationStatus
  applicationStatus_not_in: [ApplicationStatus!]
  company: CompanyWhereInput
  companyName: String
  companyName_contains: String
  companyName_ends_with: String
  companyName_gt: String
  companyName_gte: String
  companyName_in: [String!]
  companyName_lt: String
  companyName_lte: String
  companyName_not: String
  companyName_not_contains: String
  companyName_not_ends_with: String
  companyName_not_in: [String!]
  companyName_not_starts_with: String
  companyName_starts_with: String
  contacts_every: JobApplicationContactWhereInput
  contacts_none: JobApplicationContactWhereInput
  contacts_some: JobApplicationContactWhereInput
  coverLetterFile: AwsFileDataWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  dateApplied: DateTime
  dateApplied_gt: DateTime
  dateApplied_gte: DateTime
  dateApplied_in: [DateTime!]
  dateApplied_lt: DateTime
  dateApplied_lte: DateTime
  dateApplied_not: DateTime
  dateApplied_not_in: [DateTime!]
  dateDecided: DateTime
  dateDecided_gt: DateTime
  dateDecided_gte: DateTime
  dateDecided_in: [DateTime!]
  dateDecided_lt: DateTime
  dateDecided_lte: DateTime
  dateDecided_not: DateTime
  dateDecided_not_in: [DateTime!]
  dateOffered: DateTime
  dateOffered_gt: DateTime
  dateOffered_gte: DateTime
  dateOffered_in: [DateTime!]
  dateOffered_lt: DateTime
  dateOffered_lte: DateTime
  dateOffered_not: DateTime
  dateOffered_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  isApplicationActive: Boolean
  isApplicationActive_not: Boolean
  isRemote: Boolean
  isRemote_not: Boolean
  jobDecision: JobDecision
  jobDecision_in: [JobDecision!]
  jobDecision_not: JobDecision
  jobDecision_not_in: [JobDecision!]
  jobListingLink: String
  jobListingLink_contains: String
  jobListingLink_ends_with: String
  jobListingLink_gt: String
  jobListingLink_gte: String
  jobListingLink_in: [String!]
  jobListingLink_lt: String
  jobListingLink_lte: String
  jobListingLink_not: String
  jobListingLink_not_contains: String
  jobListingLink_not_ends_with: String
  jobListingLink_not_in: [String!]
  jobListingLink_not_starts_with: String
  jobListingLink_starts_with: String
  jobListingNotes: String
  jobListingNotes_contains: String
  jobListingNotes_ends_with: String
  jobListingNotes_gt: String
  jobListingNotes_gte: String
  jobListingNotes_in: [String!]
  jobListingNotes_lt: String
  jobListingNotes_lte: String
  jobListingNotes_not: String
  jobListingNotes_not_contains: String
  jobListingNotes_not_ends_with: String
  jobListingNotes_not_in: [String!]
  jobListingNotes_not_starts_with: String
  jobListingNotes_starts_with: String
  location: GoogleMapsLocationWhereInput
  locationName: String
  locationName_contains: String
  locationName_ends_with: String
  locationName_gt: String
  locationName_gte: String
  locationName_in: [String!]
  locationName_lt: String
  locationName_lte: String
  locationName_not: String
  locationName_not_contains: String
  locationName_not_ends_with: String
  locationName_not_in: [String!]
  locationName_not_starts_with: String
  locationName_starts_with: String
  NOT: [JobApplicationWhereInput!]
  notes: String
  notes_contains: String
  notes_ends_with: String
  notes_gt: String
  notes_gte: String
  notes_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_not: String
  notes_not_contains: String
  notes_not_ends_with: String
  notes_not_in: [String!]
  notes_not_starts_with: String
  notes_starts_with: String
  OR: [JobApplicationWhereInput!]
  position: String
  position_contains: String
  position_ends_with: String
  position_gt: String
  position_gte: String
  position_in: [String!]
  position_lt: String
  position_lte: String
  position_not: String
  position_not_contains: String
  position_not_ends_with: String
  position_not_in: [String!]
  position_not_starts_with: String
  position_starts_with: String
  rating: Int
  rating_gt: Int
  rating_gte: Int
  rating_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_not: Int
  rating_not_in: [Int!]
  resume: JobApplicationResumeWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
}

input JobApplicationWhereUniqueInput {
  id: ID
}

enum JobDecision {
  ACCEPTED
  DECLINED
  REJECTED
}

scalar Long

type Mutation {
  cancelSubscription: User!
  checkSubscriptionPaymentHasSucceeded: Boolean!
  completeOnboarding: Boolean!
  createCompany(file: Upload, name: String): Company!
  createJobApplication(companyId: ID, isRemote: Boolean, location: GoogleMapsLocationCreateInput, position: String): JobApplication!
  createResume(file: Upload, name: String): Resume!
  deleteAccount: User!
  deleteCompany(id: ID): Company!
  deleteJobApplication(jobId: ID): JobApplication!
  deleteResume(id: ID): Resume!
  login(email: String, password: String): User!
  logout: Boolean!
  requestPasswordReset(email: String): Boolean!
  requestVerifyEmail: Boolean!
  resetPassword(confirmPassword: String, password: String, resetToken: String): User!
  signup(confirmPassword: String, email: String, password: String): User!
  updateCompany(contacts: [CompanyContactCreateWithoutCompanyInput!], file: Upload, id: ID!, isCompanyImageUpdated: Boolean!, name: String, notes: String, rating: Int, website: String): Company!
  updateCreditCard(card: CardUpdateWithoutBillingInfoDataInput!): User!
  updateJobApplication(applicationStatus: ApplicationStatus, companyId: ID, contacts: [JobApplicationContactCreateWithoutJobApplicationInput!], coverLetterFile: Upload, dateApplied: DateTime, dateDecided: DateTime, dateInterviewing: [DateTime!], dateOffered: DateTime, id: ID!, isApplicationActive: Boolean, isCoverLetterUpdated: Boolean!, isRemote: Boolean, jobDecision: JobDecision, jobListingLink: String, jobListingNotes: String, location: GoogleMapsLocationCreateInput, notes: String, position: String, rating: Int, resumeId: String, resumeVersionId: String): JobApplication!
  updateResume(id: ID, name: String, newFileVersion: Upload): Resume!
  upgradeUser(card: CardUpdateWithoutBillingInfoDataInput!, email: String, paymentMethodId: String, planId: String): StripeSubscription!
  verifyEmail(emailToken: String): Boolean!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  companiesConnection(first: Int, orderBy: CompanyOrderByInput, skip: Int): CompanyConnection!
  company(where: CompanyWhereUniqueInput!): Company
  jobApplication(where: JobApplicationWhereUniqueInput!): JobApplication
  jobApplicationsConnection(first: Int, orderBy: JobApplicationOrderByInput, skip: Int): JobApplicationConnection!
  me: User
  resume(where: ResumeWhereUniqueInput!): Resume
  resumesConnection(first: Int, orderBy: ResumeOrderByInput, skip: Int): ResumeConnection!
}

type Resume {
  createdAt: DateTime!
  id: ID!
  name: String!
  updatedAt: DateTime!
  user: User!
  versions(after: String, before: String, first: Int, last: Int, orderBy: AwsFileDataOrderByInput, skip: Int, where: AwsFileDataWhereInput): [AwsFileData!]
}

type ResumeConnection {
  aggregate: AggregateResume!
  edges: [ResumeEdge!]!
  pageInfo: PageInfo!
}

type ResumeEdge {
  cursor: String!
  node: Resume!
}

enum ResumeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ResumeWhereInput {
  AND: [ResumeWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [ResumeWhereInput!]
  OR: [ResumeWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
  versions_every: AwsFileDataWhereInput
  versions_none: AwsFileDataWhereInput
  versions_some: AwsFileDataWhereInput
}

input ResumeWhereUniqueInput {
  id: ID
}

type StripeSubscription {
  clientSecret: String!
  status: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  billing: BillingInfo
  companies(after: String, before: String, first: Int, last: Int, orderBy: CompanyOrderByInput, skip: Int, where: CompanyWhereInput): [Company!]
  email: String!
  emailConfirmationToken: String
  googleId: String
  hasCompletedOnboarding: Boolean!
  hasVerifiedEmail: Boolean
  id: ID!
  jobApplications(after: String, before: String, first: Int, last: Int, orderBy: JobApplicationOrderByInput, skip: Int, where: JobApplicationWhereInput): [JobApplication!]
  password: String
  resetToken: String
  resetTokenExpiry: Float
  resumes(after: String, before: String, first: Int, last: Int, orderBy: ResumeOrderByInput, skip: Int, where: ResumeWhereInput): [Resume!]
}

input UserWhereInput {
  AND: [UserWhereInput!]
  billing: BillingInfoWhereInput
  companies_every: CompanyWhereInput
  companies_none: CompanyWhereInput
  companies_some: CompanyWhereInput
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  emailConfirmationToken: String
  emailConfirmationToken_contains: String
  emailConfirmationToken_ends_with: String
  emailConfirmationToken_gt: String
  emailConfirmationToken_gte: String
  emailConfirmationToken_in: [String!]
  emailConfirmationToken_lt: String
  emailConfirmationToken_lte: String
  emailConfirmationToken_not: String
  emailConfirmationToken_not_contains: String
  emailConfirmationToken_not_ends_with: String
  emailConfirmationToken_not_in: [String!]
  emailConfirmationToken_not_starts_with: String
  emailConfirmationToken_starts_with: String
  googleId: String
  googleId_contains: String
  googleId_ends_with: String
  googleId_gt: String
  googleId_gte: String
  googleId_in: [String!]
  googleId_lt: String
  googleId_lte: String
  googleId_not: String
  googleId_not_contains: String
  googleId_not_ends_with: String
  googleId_not_in: [String!]
  googleId_not_starts_with: String
  googleId_starts_with: String
  hasCompletedOnboarding: Boolean
  hasCompletedOnboarding_not: Boolean
  hasVerifiedEmail: Boolean
  hasVerifiedEmail_not: Boolean
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  jobApplications_every: JobApplicationWhereInput
  jobApplications_none: JobApplicationWhereInput
  jobApplications_some: JobApplicationWhereInput
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  resetToken: String
  resetToken_contains: String
  resetToken_ends_with: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_not: String
  resetToken_not_contains: String
  resetToken_not_ends_with: String
  resetToken_not_in: [String!]
  resetToken_not_starts_with: String
  resetToken_starts_with: String
  resetTokenExpiry: Float
  resetTokenExpiry_gt: Float
  resetTokenExpiry_gte: Float
  resetTokenExpiry_in: [Float!]
  resetTokenExpiry_lt: Float
  resetTokenExpiry_lte: Float
  resetTokenExpiry_not: Float
  resetTokenExpiry_not_in: [Float!]
  resumes_every: ResumeWhereInput
  resumes_none: ResumeWhereInput
  resumes_some: ResumeWhereInput
}
