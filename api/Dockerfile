FROM node:12.16.1-alpine3.11

RUN apk add --no-cache python make g++

ARG API_AWS_ACCESS_KEY_ID
ARG API_AWS_ACCESS_KEY
ARG API_AWS_BUCKET_NAME
ARG PRISMA_ENDPOINT
ARG PRISMA_SECRET
ARG PRISMA_MANAGEMENT_API_SECRET
ARG COMMON_FRONTEND_URL
ARG COMMON_BACKEND_URL
ARG API_COOKIE_DOMAIN
ARG API_GOOGLE_CLIENT_ID
ARG API_GOOGLE_CLIENT_SECRET
ARG API_APP_SECRET
ARG API_PORT
ARG API_STRIPE_API_KEY
ARG COMMON_STRIPE_YEARLY_PLAN_ID
ARG COMMON_STRIPE_MONTHLY_PLAN_ID
ARG API_STRIPE_WEBHOOK_SECRET
ARG API_CLOUDFRONT_DOMAIN
ARG API_AMPLITUDE_API_KEY

EXPOSE $API_PORT

# Set environment variables
ENV API_AWS_ACCESS_KEY_ID $API_AWS_ACCESS_KEY_ID
ENV API_AWS_ACCESS_KEY $API_AWS_ACCESS_KEY
ENV API_AWS_BUCKET_NAME $API_AWS_BUCKET_NAME
ENV COMMON_FRONTEND_URL $COMMON_FRONTEND_URL
ENV COMMON_BACKEND_URL $COMMON_BACKEND_URL
ENV API_COOKIE_DOMAIN $API_COOKIE_DOMAIN
ENV API_GOOGLE_CLIENT_ID $API_GOOGLE_CLIENT_ID
ENV API_GOOGLE_CLIENT_SECRET $API_GOOGLE_CLIENT_SECRET
ENV API_APP_SECRET $API_APP_SECRET
ENV API_PORT $API_PORT
ENV API_STRIPE_API_KEY $API_STRIPE_API_KEY
ENV COMMON_STRIPE_YEARLY_PLAN_ID $COMMON_STRIPE_YEARLY_PLAN_ID
ENV COMMON_STRIPE_MONTHLY_PLAN_ID $COMMON_STRIPE_MONTHLY_PLAN_ID
ENV API_STRIPE_WEBHOOK_SECRET $API_STRIPE_WEBHOOK_SECRET
ENV API_CLOUDFRONT_DOMAIN $API_CLOUDFRONT_DOMAIN
ENV API_AMPLITUDE_API_KEY $API_AMPLITUDE_API_KEY

# Setup working directory. All the paths will be relative to WORKDIR
WORKDIR /usr/src/app

# Install dependencies
COPY package.json yarn.lock ./
RUN yarn

# Copy all source files into docker container
COPY . .

# Run the app
CMD [ "yarn", "start" ]