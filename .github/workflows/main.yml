on: pull_request

jobs:
  lint-repo:
    runs-on: ubuntu-latest
    name: Lint all repository files
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install dependencies
        run: yarn
      - name: Lint
        run: yarn lint
  lint-api:
    runs-on: ubuntu-latest
    name: Type check API files
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install dependencies
        run: yarn
        working-directory: ./api
      - name: Type check

        run: yarn tsc
        working-directory: ./api
  lint-web-app:
    runs-on: ubuntu-latest
    name: Type check web app files
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install dependencies
        run: yarn
        working-directory: ./web-app
      - name: Type check
        run: yarn tsc
        working-directory: ./web-app
  tests-web-app:
    runs-on: ubuntu-latest
    name: Run web app tests
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install dependencies
        run: yarn
        working-directory: ./web-app
      - name: Run tests
        run: yarn test
        working-directory: ./web-app
  generated-api:
    runs-on: ubuntu-latest
    name: Verify API generated code up-to-date
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install dependencies and generate prisma client (via postinstall script)
        working-directory: ./api
        run: yarn
      - name: Verify no new code has been generated
        run: git add --all && git diff-index HEAD --compact-summary --exit-code
        working-directory: ./api
  generated-web-app:
    runs-on: ubuntu-latest
    name: Verify web app generated code up-to-date
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install dependencies
        run: yarn
        working-directory: ./web-app
      - name: Download graphql schema and generate apollo code
        run: yarn apollo:download
        working-directory: ./web-app
      - name: Verify no new code has been generated
        run: git add --all && git diff-index HEAD --compact-summary --exit-code
        working-directory: ./web-app
  build-web-app:
    runs-on: ubuntu-latest
    name: Build web app
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install dependencies
        run: yarn
        working-directory: ./web-app
      - name: Build NextJS app
        run: yarn build
        working-directory: ./web-app
